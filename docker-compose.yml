services:
  bot:
    build:
      context: bot
      dockerfile: ../buildfiles/bot.dockerfile
    restart: always
    env_file:
      - .env
    volumes:
      - ./bot/bot:/app/bot
    depends_on:
      - redis
      - back
    networks:
      bot:
        aliases:
          - bot

  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - ./cache:/data
    networks:
      bot:
        aliases:
          - redis

  back:
    build:
      context: .
      dockerfile: buildfiles/back.dockerfile
    restart: always
    environment:
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_DB: '${POSTGRES_DB}'
      SECRET_TOKEN: '${SECRET_TOKEN}'
      PORT: 3000
    volumes:
      - ./back:/app                       # исходники для dev
    ports:
      - "3000:3000"
    depends_on:
      - db
    networks:
      bot:
        aliases:
          - back

  db:
    image: postgres:alpine
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - './data/db:/var/lib/postgresql/data'
    environment:
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_DB: '${POSTGRES_DB}'
      TZ: 'Asia/Vladivostok'
    networks:
      bot:
        aliases:
          - db

networks:
  bot:
    driver: bridge
